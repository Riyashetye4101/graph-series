class Solution {
public:
    int orangesRotting(vector<vector<int>>& grid) {
        vector<vector<int>> visited=grid;
        int n=grid.size();
        int m=grid[0].size();
        queue<pair<pair<int,int>,int>> q;

        int time=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==2){
                    q.push({{i,j},0});
                }
            }
        }
        int rk[4]={-1,0,1,0};
        int ck[4]={0,1,0,-1};
        while(!q.empty()){
             int r=q.front().first.first;
             int c=q.front().first.second;
             int t=q.front().second;
             
             q.pop();
             for(int k=0;k<4;k++){
                 int nr=r+rk[k];
                 int nc=c+ck[k];
                 if(nr>=0 && nr<n && nc>=0 && nc<m && grid[nr][nc]==1 && visited[nr][nc]!=2){
                       q.push({{nr,nc},t+1});
                       visited[nr][nc]=2;
                 }
             }
             time=max(time,t);
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(visited[i][j]==1) return -1;
            }
        }
        return time;
    }
};

class Solution {
public:
    static void dfs(int node,vector<vector<int>> &adj,vector<bool> &visited,int n){
        visited[node]=true;
        for(int i=0;i<n;i++){
            if(adj[node][i]==1 && visited[i]!=true){
                dfs(i,adj,visited,n);
            }
        }
        return;
    }
    int findCircleNum(vector<vector<int>>& isConnected) {
        int count=0;
        int n=isConnected.size();
        vector<bool> visited(n,false);

        for(int i=0;i<n;i++){
            if(!visited[i]){
                count++;
                dfs(i,isConnected,visited,n);
            }
        }
        return count;
    }
};
